<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[程序猎人的博客]]></title>
  <link href="http://programus.github.com/atom.xml" rel="self"/>
  <link href="http://programus.github.com/"/>
  <updated>2012-03-30T13:58:18+09:00</updated>
  <id>http://programus.github.com/</id>
  <author>
    <name><![CDATA[程序猎人]]></name>
    <email><![CDATA[programus@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Draw Something]]></title>
    <link href="http://programus.github.com/blog/2012/03/26/draw-something/"/>
    <updated>2012-03-26T21:11:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/26/draw-something</id>
    <content type="html"><![CDATA[<p>昨天晚上经介绍，认识了一个新游戏——Draw Something。当时就迷上了。现在还在玩……</p>

<!--more-->


<p>Draw Something是一款移动平台游戏，类似你画我猜。在android和iOS上都有。与大多数你画我猜类游戏不同的是没有限时的异步绘画。</p>

<p>这个游戏，对于我，可以说是很早以前就一直期盼着的游戏类型。昨晚玩上就有一种相见恨晚的感觉。就跟当年学编程，第一次接触面向对象的思想时一样……一种“我X！这么多年想要的就是这个！”的感觉。（跑题了……）</p>

<p>最早接触你猜我画类游戏，是在大概十年前左右的Yahoo。上面有跟现在各大网站流行的你猜我画一般无二的游戏。虽然是英文的，但是判断基准比现在国内社交网站上的更智能些。（比如复数错了都算猜对，意思或拼写上接近的单词会给予颜色提示。）</p>

<p>确切地说，在接触Yahoo的网上游戏之前，早在我上中小学的时候，就跟亲戚的小孩自行发明了类似的游戏。当时我们几个人都比较喜欢乱涂乱画，虽然画得都不咋地，但都自命不凡。为了一较高下，我们发明了画名人猜名字的游戏——一个人画一个名人，大家猜叫什么名字。中小学课本上的插图成了我们当时参考的蓝本，不过游戏规定必须背着画，所以冒出了看不出来到底是马克思还是恩格斯的大胡子（最后由作者爆料——那是达·芬奇）、长得像洋葱头的列宁、神似形不似的鲁迅……</p>

<p>作为一个小时候发明此类游戏的人员之一，看到我画你猜类游戏，怎能不兴奋？于是在十多年前，我就忍着4级险过的英语水平，一边开着词典网站，一边在Yahoo上玩起了那个游戏。
后来，工作忙了，就把游戏放下了。多年之后，人人之类的网站上出现了你猜我画，再次兴奋了一把。不过偏门词汇太多，网络速度有时不给力，实在让人爱恨交加。</p>

<p>还有一点最不爽的，从Yahoo的游戏到你猜我画都有的问题，就是——限时！这实在是太让人抓狂了。把一个东西画明白，我很有自信，但快速把画画完，我可没那个功力。所以，常常自己的想法没办法很好的表现出来。</p>

<p>直到昨天晚上看到Draw Something，我震惊了！居然没有时限！居然可以擦了重画，居然猜的人还可以看到绘图过程！</p>

<p>这意味着，我可以慢慢精雕细琢，我可以用动画来表现内容，我可以……发挥无限的想象！（说这个游戏跟你猜我画无异的人恐怕都没理解到绘画表现力的精髓啊……）</p>

<p>于是，作为一个喜欢猜画类游戏的人，Draw Something是我目前见过的最好的游戏！没有“之一”。</p>

<p>如果说缺点，就是网络状况不佳时会有些数据传送的bug；免费版没有金币就没有更多的颜色（为了画个绿色，那黄色跟蓝色抹了半天也没出来效果，好在猜的人懂三原色，居然猜到了）……但这些都是瑕不掩瑜的问题。</p>

<p>最后，我再次开始痛恨自己的英文词汇量不足……为了游戏，一定要努力学习英语！（谁说游戏耽误学习的？）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript游戏——Memory]]></title>
    <link href="http://programus.github.com/blog/2012/03/25/js-game-memory/"/>
    <updated>2012-03-25T17:47:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/25/js-game-memory</id>
    <content type="html"><![CDATA[<p>前段时间看了《JavaScript语言精粹》，一直想实践一下。于是利用了3、4天的时间做了一个记忆力游戏——<a href="http://programus.appinn.me/jsgames/memory-single.html">Memory</a>。</p>

<!--more-->


<p>先在这里放一个直接可玩的版本：</p>

<iframe id="memory-game" width="350" height="380" src="http://programus.appinn.me/jsgames/memory-single.html"></iframe>


<p>看书的时候随随便便就看过去了，实际做的时候才总是感到书到用时方恨少。书中提到的一些常见问题还真是很常见，在实际编写程序的过程中很多都碰上了。</p>

<p>游戏最终在网上发布时使用的文件——<a href="http://programus.appinn.me/jsgames/memory-single.html">memory-single.html</a>——是一个整合了所有内容的文件，直接转存到本地后，单独一个文件就可以展现整个游戏内容。甚至包括所有的声音和图片。</p>

<p>对于图片，使用了<a href="http://en.wikipedia.org/wiki/Data_URI_scheme">Data URI Schema</a>的技术，将图像的二进制内容转码成Base64编码，以文本形式写在html文件中。不过，本游戏中一共就用了两个图片：作为favicon的图标和下拉列表框的自定义箭头。</p>

<p>对于声音，使用了Pedro Ladaria做的<a href="http://www.codebase.es/riffwave/">代码生成声音的库</a>。我在<a href="http://www.csser.com/" title="CSSer">CSSer</a>上放了一个<a href="http://www.csser.com/board/4f6ab5086e9e4f0817000066#/post/4f6ab6462af57d0a17000020/more">贴板</a>，里面贴了声音库的使用相关链接。</p>

<p>最后，说一下自定义风格的下拉列表框。参考了<a href="http://bavotasan.com/2011/style-select-box-using-only-css/">这篇文章</a>，使用外框的标签来切断<code>&lt;select&gt;</code>的内容，将右边的箭头排除到外框标签的外面并遮挡住。其中不同的是，我在这里使用的外框是<code>&lt;span&gt;</code>而不是<code>&lt;div&gt;</code>。最初使用<code>&lt;span&gt;</code>的时候，没有成功，后来在网上查询才知道只有<code>block</code>级的标签才有效，而<code>&lt;span&gt;</code>不是。但加上<code>display:inline-block</code>就可以如<code>block</code>级标签一般工作了。</p>

<p>说了这么多，最后附上代码。</p>

<div title="其实，我是个按钮" style="cursor:pointer;" onclick="if($('#source-block').css('display') === 'none') {$('#source-block').css('display', 'block');$('#show-hide').text('隐藏');}else{$('#source-block').css('display','none');$('#show-hide').text('显示');}">[<span id="show-hide">显示</span>代码部分]</div>




<div style="display:none;" id="source-block">
<div><script src='https://gist.github.com/2192639.js?file='></script>
<noscript><pre><code>table.matrix,tbody.matrix {
  border-style:double;
  border-width:3px;
  border-color:#000000;
  border-spacing:0;
  padding:0;
  margin:0;
  background-color:#aaffff;
}
table.matrix td {
  border-style:solid;
  border-width:1px;
  border-color:#AAAAAA;
  padding:0;
  margin:0;
  width:1.5em;
  height:1.5em;
}
table.matrix td.action {
  background:#ffffff;
  cursor:pointer;
}

table.matrix td.fading {
  background:#ffffff;
}

table.matrix td.action:hover {
  background:#ccffcc;
  cursor:pointer;
}

table.matrix td.error {
  border-color:#ff0000;
}

table.matrix td.error-action {
  border-color:#aaff00;
}

table.matrix td.show {
  background:#dddddd;
}

#matrix-size-span {
  width:3em;
  overflow-x:hidden;
  display:inline-block;
  background-image:url(&quot;../select-arrow.png&quot;);
  background-repeat:no-repeat;
  background-position:center right;
     border: 1px solid #ccc;
}

#matrix-size-span.disabled {
  background-color:#777777;
}

#matrix-size {
  color:#777777;
  width:5em;
  background: transparent;
     border: 0px;
     cursor:pointer;
}

#matrix-size:disabled {
  color:#444444;
  text-decoration:none;
  text-shadow:1px 1px 0px #aaaaaa;
  cursor:default;
}

#score.updating {
  color:#00aa00;
  background:#dddd88;
}

#score.stable {
  background:inherit;
}

#score-panel {
  margin-top:0.3em;
  margin-bottom:0.2em;
}

#score-bar {
  padding:2px;
}

#score-bar.finished {
  color:#444444;
  background:#edcfaa;
}

#score-bar.normal {
  color:#777777;
}

#game-panel {
}

#start-action {
  background-color:#ededed;
  border:1px solid #dcdcdc;
  display:inline-block;
  color:#777777;
  font-family:arial;
  font-size:11px;
  font-weight:bold;
  padding:2px 5px;
  text-decoration:none;
  cursor:pointer;
}

#start-action:disabled {
  background-color:#777777;
  color:#444444;
  border:1px solid #444444;
  text-decoration:none;
  text-shadow:1px 1px 0px #aaaaaa;
  cursor:default;
}

#start-action:enabled:hover {
  background-color:#dfdfdf;
}

#start-action:enabled:active {
  position:relative;
  top:1px;
}

h1 {
  text-align:center;
  color:#444444;
  text-decoration:none;
  text-shadow:1px 1px 0px #aaaaaa;
}

body {
  background-color:#ededed;
}
</code></pre></noscript></div>

</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在programus.appinn.me上放了两个软件]]></title>
    <link href="http://programus.github.com/blog/2012/03/14/put-two-softwares-onto-appinn-dot-me/"/>
    <updated>2012-03-14T22:57:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/14/put-two-softwares-onto-appinn-dot-me</id>
    <content type="html"><![CDATA[<p>大概两个星期前，跟<a href="http://appinn.com" title="小众软件">小众软件</a>申请了<a href="http://appinn.me">appinn.me</a>的域名——<a href="http://programus.appinn.me">programus.appinn.me</a>。</p>

<p>说起来有点对不住<a href="http://appinn.com" title="小众软件">小众</a>，因为各种原因，一直没腾出时间去打点。今天终于抽出了点时间，去放了两个以前做的软件——</p>

<!--more-->


<ul>
<li><a href="http://programus.appinn.me/softwares/ptray/">PTray</a></li>
<li><a href="http://programus.appinn.me/softwares/screenruler/">ScreenRuler</a></li>
</ul>


<p>小众提供的模板还是不错的，不需要自己修改HTML，只要把对应的文件内容做下更改就行。不过，可惜这些对应的文件的扩展名是<code>.txt</code>，导致在里面编写<code>HTML</code>的时候无法代码高亮。
等再有时间的时候，研究一下如何改成<code>.html</code>扩展名的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress追加数据表格的CSS]]></title>
    <link href="http://programus.github.com/blog/2012/03/07/add-table-data-css-for-octopress/"/>
    <updated>2012-03-07T21:56:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/07/add-table-data-css-for-octopress</id>
    <content type="html"><![CDATA[<p>昨天恢复了一个<a href="http://programus.github.com/blog/2010/11/15/tiny-countdown/">旧博客</a>，里面包含了一个数据表格。</p>

<p>但<a href="http://octopress.org" title="Octopress">Octopress</a>的默认表格是不具有边框的，在看数据表格时会很难看。</p>

<p>于是，对<a href="http://octopress.org" title="Octopress">Octopress</a>做了一番剖析，追加了针对数据表格的CSS格式，并允许在博客的内容文件中选择是否使用数据表格。</p>

<!--more-->


<p>要做到这一点，首先得先找到原始CSS的所在，在Firefox中<a href="http://getfirebug.com/" title="Firebug">Firebug</a>的帮助下，很顺利地找到了位于<code>source/stylesheets</code>的<code>screen.css</code>文件。</p>

<p>打开一看，傻眼了。居然是紧凑型CSS，都堆在一起了。于是上网找了个CSS格式化工具——<a href="http://www.cssportal.com/online-css-editor/">http://www.cssportal.com/online-css-editor/</a>。</p>

<p>当CSS格式化后，查看了一下里面对<code>table</code>、<code>th</code>、<code>td</code>的格式定义。发现确实将<code>border-width</code>设置成了<code>0</code>。</p>

<p>看来只有覆盖它们了。于是写了一个<code>data-table.css</code>，同样放在<code>source/stylesheets</code>下面。</p>

<div><script src='https://gist.github.com/1993032.js?file=data-table.css'></script>
<noscript><pre><code>table {
  border-style:solid;
  border-width:1px;
  border-color:#e7e3e7;
}

th, td {
  border-style:dashed;
  border-width:1px;
  border-color:#e7e3e7;
  padding-left: 3px;
  padding-right: 3px;
}

th {
  border-style:solid;
  font-weight:bold;
  background: url(&quot;/images/noise.png?1330434582&quot;) repeat scroll left top #F7F3F7;
}
</code></pre></noscript></div>


<p>（感谢<a href="http://chen.yanping.me/" title="陈堰平的个人网站">陈堰平</a>在评论中的指正，CSS文件修正了。修正详情在文章最后。）</p>

<p>然后找到引入<code>screen.css</code>的文件，在其后引入<code>data-table.css</code>。这个文件是<code>source/_includes/head.html</code>。但为了保证没有数据表格的博客还能继续使用原本的表格风格，在里面加了少许条件。</p>

<div><script src='https://gist.github.com/1993032.js?file=head.html'></script>
<noscript><pre><code>  &lt;link href=&quot;{{ root_url }}/stylesheets/screen.css&quot; media=&quot;screen, projection&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
  {% if page.styles contains 'data-table' %}
  &lt;link href=&quot;{{ root_url }}/stylesheets/data-table.css&quot; media=&quot;screen, projection&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
  {% endif %}
</code></pre></noscript></div>


<p>这样，只要在博客文件的<a href="https://github.com/mojombo/jekyll/wiki/yaml-front-matter"><code>yaml front matter</code></a>部分里面加入<code>styles: [data-table]</code>，就可以让数据表格用的表格风格生效了。</p>

<p>要在博客里插入表格，则可以使用如下格式。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>左对齐表头 | 中间对齐表头 | 右对齐表头
</span><span class='line'>:----------|:------------:|----------:
</span><span class='line'>左对齐数据 |中间对齐数据  |右对齐数据
</span><span class='line'>第二行数据 |也是第二行    |还是第二行
</span><span class='line'>懒得写了...|.....         |.....
</span><span class='line'>长数据，以便看出表头的对齐|长数据，以便看出表头的对齐|长数据，以便看出表头的对齐
</span></code></pre></td></tr></table></div></figure>


<p>就会得到如下表格：</p>

<table>
<thead>
<tr>
<th align="left">左对齐表头 </th>
<th align="center"> 中间对齐表头 </th>
<th align="right"> 右对齐表头</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">左对齐数据 </td>
<td align="center">中间对齐数据  </td>
<td align="right">右对齐数据</td>
</tr>
<tr>
<td align="left">第二行数据 </td>
<td align="center">也是第二行    </td>
<td align="right">还是第二行</td>
</tr>
<tr>
<td align="left">懒得写了&#8230;</td>
<td align="center">&#8230;..         </td>
<td align="right">&#8230;..</td>
</tr>
<tr>
<td align="left">长数据，以便看出表头的对齐</td>
<td align="center">长数据，以便看出表头的对齐</td>
<td align="right">长数据，以便看出表头的对齐</td>
</tr>
</tbody>
</table>


<p>其中的左右对齐，取决于表头下面一行中的冒号的位置。</p>

<hr />

<h3>2012-03-19补充：</h3>

<p>感谢<a href="http://chen.yanping.me/" title="陈堰平的个人网站">陈堰平</a>的指正，之前的CSS会连同代码框都改掉。查看了一下HTML代码，发现代码框的代码有如下特点：</p>

<ul>
<li>嵌在<code>&lt;div class="highlight"&gt;</code>或<code>&lt;div class="gist-highlight"&gt;</code>中</li>
<li><code>&lt;td&gt;</code>标签有<code>code</code>或<code>gutter</code>这两个class</li>
<li><code>&lt;td&gt;</code>的子标签是<code>&lt;pre&gt;</code></li>
</ul>


<p>本想用以上中的某种来区分对待CSS，但CSS中不支持通过排除某class（CSS3中有了<code>:not()</code>，但CSS3未被全部浏览器支持）或指定父标签来进行选择。由于对CSS也不是很熟悉，所以重新有学习了一次CSS选择器相关的知识，其中发现一个<code>+</code>选择器，可以通过在同级出现的标签来指定。这时发现了代码框的又一个特点：</p>

<ul>
<li><code>&lt;table&gt;</code>标签是孤独的（没有兄弟节点）</li>
</ul>


<p>但数据表格必然是配合文章出现的，前后通常都会有些兄弟标签。（即使没有也可以自己追加一个空<code>&lt;span&gt;</code>或<code>&lt;div&gt;</code>来解决。）于是，使用<code>* + table</code>来做选择器选出非代码的表格——也就是数据表格——从而完成了数据表格特定CSS的实现。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress追加[分享到微博]按钮]]></title>
    <link href="http://programus.github.com/blog/2012/03/04/share-weibo-button/"/>
    <updated>2012-03-04T20:11:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/04/share-weibo-button</id>
    <content type="html"><![CDATA[<p>昨天加上了<a href="http://weibo.com" title="新浪微博">微博</a>的侧边栏。今天发现每篇微博下面还有一个<code>Tweet</code>按钮。还是那句话，在<a href="http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" title="叹息之墙">墙</a>后面，<a href="http://twitter.com/" title="Twitter">Twitter</a>用不到，所以<a href="http://weibo.com" title="新浪微博">微博</a>的分享按钮不可缺少。</p>

<!--more-->


<p>有了昨天的经验，今天也就没去网上查什么资料。直接去<a href="http://weibo.com" title="新浪微博">新浪微博</a>找到<a href="http://open.weibo.com/sharebutton" title="新浪微博分享按钮">分享按钮</a>的页面，生成一个按钮代码。</p>

<div><script src='https://gist.github.com/1972564.js?file='></script>
<noscript><pre><code>&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
(function(){
  var _w = 86 , _h = 50;
  var param = {
    url:location.href,
    type:'6',
    count:'1', /**是否显示分享数，1显示(可选)*/
    appkey:'', /**您申请的应用appkey,显示分享来源(可选)*/
    title:'', /**分享的文字内容(可选，默认为所在页面的title)*/
    pic:'', /**分享图片的路径(可选)*/
    ralateUid:'1098907490', /**关联用户的UID，分享微博会@该用户(可选)*/
    language:'zh_cn', /**设置语言，zh_cn|zh_tw(可选)*/
    rnd:new Date().valueOf()
  }
  var temp = [];
  for( var p in param ){
    temp.push(p + '=' + encodeURIComponent( param[p] || '' ) )
  }
  document.write('&lt;iframe allowTransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;http://hits.sinajs.cn/A1/weiboshare.html?' + temp.join('&amp;') + '&quot; width=&quot;'+ _w+'&quot; height=&quot;'+_h+'&quot;&gt;&lt;/iframe&gt;')
})()
&lt;/script&gt;</code></pre></noscript></div>


<p>仔细看看生成的按钮，虽然上面写了一大堆JavaScript，但实际有用的就是最后一行<code>document.write('...')</code>里面的HTML代码。但这里HTML的主要部分都是用JavaScript生成的。于是祭出网页分析神器——<a href="http://getfirebug.com/" title="Firebug">Firebug</a>，直接分析<a href="http://open.weibo.com/sharebutton" title="新浪微博分享按钮">分享按钮</a>页面里例子的HTML代码。从中提取出如下URL（为了便于阅读，格式做了调整）——</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://hits.sinajs.cn/A1/weiboshare.html?
</span><span class='line'>  url=http%3A%2F%2Fopen.weibo.com%2Fsharebutton&
</span><span class='line'>  appkey=&
</span><span class='line'>  type=6&
</span><span class='line'>  ralateUid=1098907490&
</span><span class='line'>  language=zh_cn</span></code></pre></td></tr></table></div></figure>


<p>其中各个参数的意思，参看生成的JavaScript的注释，基本一目了然了。下一步，嵌入代码到博客下面的分享栏里。</p>

<p>经过一番查找，分享栏的代码存储在<code>source/_includes/post/sharing.html</code>中。果断加入代码：</p>

<div><script src='https://gist.github.com/1972657.js?file=sharing.html'></script>
<noscript><pre><code>&lt;div class=&quot;sharing&quot;&gt;
  {% if site.weibo_share %}
  &lt;span&gt;
  &lt;iframe 
    width=&quot;86&quot; 
    scrolling=&quot;no&quot; 
    height=&quot;16&quot; 
    frameborder=&quot;0&quot; 
    src=
      &quot;http://hits.sinajs.cn/A1/weiboshare.html?url={{ site.url }}{{ page.url }}&amp;amp;type=6&amp;amp;{% if site.weibo_uid %}ralateUid={{ site.weibo_uid }}&amp;amp;{% endif %}language=zh_cn&quot; allowtransparency=&quot;true&quot;&gt;
  &lt;/iframe&gt;
  &lt;/span&gt;
  {% endif %}
  {% if site.twitter_tweet_button %}
  &lt;a href=&quot;http://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-url=&quot;{{ site.url }}{{ page.url }}&quot; data-via=&quot;{{ site.twitter_user }}&quot; data-counturl=&quot;{{ site.url }}{{ page.url }}&quot; &gt;Tweet&lt;/a&gt;
  {% endif %}
  {% if site.google_plus_one %}
  &lt;div class=&quot;g-plusone&quot; data-size=&quot;{{ site.google_plus_one_size }}&quot;&gt;&lt;/div&gt;
  {% endif %}
  {% if site.facebook_like %}
    &lt;div class=&quot;fb-like&quot; data-send=&quot;true&quot; data-width=&quot;450&quot; data-show-faces=&quot;false&quot;&gt;&lt;/div&gt;
  {% endif %}
&lt;/div&gt;
&lt;hr style=&quot;border-bottom:1px dotted #bdbabd;height:1px;border-top:0px;border-left:0px;border-right:0px;&quot; /&gt;
</code></pre></noscript></div>


<p>其中最后一行是自己调整了一下看着顺眼的格式。</p>

<p>同时要在<code>_config.yml</code>文件中加入<code>weibo_share</code>的设定。</p>

<div><script src='https://gist.github.com/1972657.js?file=_config.yml'></script>
<noscript><pre><code># Weibo
# Please refer to http://weibo.com/tool/weiboshow to get your uid and verifier. 
weibo_uid: 1098907490
weibo_verifier: abd54ad9
weibo_fansline: 0   # How many lines for the fan list
weibo_show: true    # Whether you want your weibo content to be shown
weibo_pic: true     # Whether you want the pictures in weibo to be shown
weibo_skin: 10      # Please refer to http://weibo.com/tool/weiboshow
weibo_share: true   # Whether show the sharing button
</code></pre></noscript></div>


<p>最后，为了更换主题时不会出问题，对<code>.theme/&lt;所用的主题名&gt;/source/_includes/post/sharing.html</code>也做了相应的修改。</p>

<p>最后，生成网页、启动服务器测试——</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>查看预览网页<a href="http://localhost:4000">http://localhost:4000</a>……<strong>按钮加入成功</strong>！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Octopress博客追加新浪微博侧栏]]></title>
    <link href="http://programus.github.com/blog/2012/03/03/add-weibo-sidebar-into-octopress/"/>
    <updated>2012-03-03T21:43:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/03/add-weibo-sidebar-into-octopress</id>
    <content type="html"><![CDATA[<p>配置好了基于Octopress的博客后，发现其右侧边栏（位置自然根据主题会有不同）上有<a href="http://twitter.com/" title="Twitter">Twitter</a>等内容。因为<a href="http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" title="叹息之墙">墙</a>的原因，<a href="http://twitter.com/" title="Twitter">Twitter</a>始终使用起来不够方便，所以还是<a href="http://weibo.com" title="新浪微博">新浪微博</a>用的更多。于是，就想在博客里弄一个<a href="http://weibo.com" title="新浪微博">微博</a>的侧边栏。</p>

<!--more-->


<p><img class="left" src="http://programus.github.com/images/posts/octopress-weibo.png" title="" ></p>

<h3>实现设想</h3>

<p><a href="http://weibo.com" title="新浪微博">微博</a>本身提供了一个嵌入侧边栏的工具，叫<a href="http://weibo.com/tool/weiboshow" title="微博秀">微博秀</a>。于是便想是不是简单嵌入即可呢？</p>

<h3>其他尝试</h3>

<p>但对稍有点费劲的工作，当然首先是上网搜索一下是否有现成方案。果然找到了一篇文章——《<a href="http://blog.tingkun.com/blog/2011/11/05/xin-lang-wei-bo-ce-lan-widgetding-zhi-octopress/">新浪微博侧栏widget定制</a>》。</p>

<p>仔细查看了一下代码，发现作者好粗心，代码里居然没有用变量，而是把自己的用户名直接硬写进去了。另外，貌似只实现了<code>微博名片</code>和<code>关注按钮</code>。而且因为使用了<a href="http://weibo.com" title="新浪微博">微博</a>的JavaScript API，所以需要一个APP ID。</p>

<h3>回归</h3>

<p>我是懒人，不想搞得那么复杂。于是继续回到自己最初的方案——嵌入<a href="http://weibo.com/tool/weiboshow" title="微博秀">微博秀</a>。</p>

<p>先到<a href="http://weibo.com/tool/weiboshow" title="微博秀">微博秀</a>里面生成自己的微博秀嵌入代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;iframe</span>
</span><span class='line'>  <span class="na">width=</span><span class="s">&quot;100%&quot;</span>
</span><span class='line'>  <span class="na">height=</span><span class="s">&quot;550&quot;</span>
</span><span class='line'>  <span class="na">class=</span><span class="s">&quot;share_self&quot;</span>
</span><span class='line'>  <span class="na">frameborder=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>  <span class="na">scrolling=</span><span class="s">&quot;no&quot;</span>
</span><span class='line'>  <span class="na">src=</span><span class="s">&quot;http://widget.weibo.com/weiboshow/index.php?</span>
</span><span class='line'><span class="s">      width=0&amp;</span>
</span><span class='line'><span class="s">      height=550&amp;</span>
</span><span class='line'><span class="s">      fansRow=1&amp;</span>
</span><span class='line'><span class="s">      ptype=1&amp;</span>
</span><span class='line'><span class="s">      speed=0&amp;</span>
</span><span class='line'><span class="s">      skin=2&amp;</span>
</span><span class='line'><span class="s">      isTitle=0&amp;</span>
</span><span class='line'><span class="s">      noborder=1&amp;</span>
</span><span class='line'><span class="s">      isWeibo=1&amp;</span>
</span><span class='line'><span class="s">      isFans=1&amp;</span>
</span><span class='line'><span class="s">      uid=1098907490&amp;</span>
</span><span class='line'><span class="s">      verifier=abd54ad9&amp;</span>
</span><span class='line'><span class="s">      dpc=1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/iframe&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>仔细一看，其实就是一个大URL，尝试一下各种参数。最终写了一个<code>weibo.html</code>，放到了<code>source/_includes/asides</code>下面。貌似在<code>.theme/&lt;所用的主题名&gt;/source/_includes/asides</code>下面放着更好，因为切换主题时不会丢失。</p>

<div><script src='https://gist.github.com/1966517.js?file=weibo.html'></script>
<noscript><pre><code>{% if site.weibo_uid %}
&lt;section&gt;
  &lt;h1&gt;新浪微博&lt;/h1&gt;
  &lt;ul id=&quot;weibo&quot;&gt;
    &lt;li&gt;
      &lt;iframe 
        width=&quot;100%&quot; 
        height=&quot;550&quot; 
        class=&quot;share_self&quot; 
        frameborder=&quot;0&quot; 
        scrolling=&quot;no&quot; 
        src=&quot;http://widget.weibo.com/weiboshow/index.php?width=0&amp;height=550&amp;ptype={% if site.weibo_pic %}1{% else %}0{% endif %}&amp;speed=0&amp;skin={{weibo_skin}}&amp;isTitle=0&amp;noborder=1&amp;isWeibo={% if site.weibo_show %}1{% else %}0{% endif %}&amp;isFans={{weibo_fansline}}&amp;uid={{site.weibo_uid}}&amp;verifier={{site.weibo_verifier}}&quot;&gt;
      &lt;/iframe&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;
{% endif %}
</code></pre></noscript></div>


<p>同时，在<code>_config.yml</code>中加入相关设定——</p>

<div><script src='https://gist.github.com/1966517.js?file=_config.yml'></script>
<noscript><pre><code># 其它内容....

default_asides: [asides/recent_posts.html, asides/weibo.html, asides/github.html, asides/[Twitter][].html, asides/googleplus.html]

# 其它内容....

# Weibo
# Please refer to http://weibo.com/tool/weiboshow to get your uid and verifier. 
weibo_uid: 1098907490
weibo_verifier: abd54ad9
weibo_fansline: 0   # 粉丝显示多少行
weibo_show: true    # 是否显示最近微博内容
weibo_pic: true     # 是否显示微博中的图片
weibo_skin: 10      # 使用哪种配色风格，数字为从1开始的微博秀风格序号

# 其它内容....</code></pre></noscript></div>


<p>其中的<code>weibo_uid</code>和<code>weibo_verifier</code>是从<a href="http://weibo.com/tool/weiboshow" title="微博秀">微博秀</a>生成的代码中取得的，其它则是显示设定。</p>

<p>至此，搞定了微博的嵌入。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第一篇用Octopress生成的日志]]></title>
    <link href="http://programus.github.com/blog/2012/03/01/first-post-by-octopress/"/>
    <updated>2012-03-01T21:31:00+09:00</updated>
    <id>http://programus.github.com/blog/2012/03/01/first-post-by-octopress</id>
    <content type="html"><![CDATA[<p>先是在知乎上发现了一个叫<a href="http://www.zhihu.com/people/lv-kun" title="吕坤的知乎主页">吕坤</a>的人，顺着简介发现了<a href="http://lvkun.github.com/" title="吕坤的github博客">他的博客</a>。然后了解到可以使用github来写博客，觉得很好玩，就打算试一试。</p>

<!--more-->


<p>我不像<a href="http://www.zhihu.com/people/lv-kun" title="吕坤的知乎主页">吕坤</a>对<a href="http://www.ruby-lang.org" title="Ruby">Ruby</a>那么大意见，所以装了运行Jekyll的一切必需品，现学<a href="http://git-scm.com/" title="Git">Git</a>（这个早就听说了，一直没用到所以没学）、<a href="https://github.com/mojombo/jekyll/wiki" title="Jekyll">Jekyll</a>、<a href="http://daringfireball.net/projects/markdown/" title="Markdown">Markdown</a>……折腾了一个星期天，终于可以显示博客了。正高兴呢，忽然发现服务器不正常了。</p>

<p>经过一番查找，发现是因为<a href="https://github.com/mojombo/jekyll/wiki" title="Jekyll">Jekyll</a>运行时使用默认环境的地区编码信息，所以不识别UTF-8编码中的中文。从网上搜到Windows下可以使用<code>chcp</code>来改变语言编码，于是试了试<code>chcp 65001</code>，发现运行</p>

<pre><code>jekyll --pygments --safe --auto --server
</code></pre>

<p>之后没有任何显示。遂放弃。</p>

<p>继续查，发现哪怕在Windows下，只要设置<code>LANG</code>和<code>LC_ALL</code>后，便可以设置的编码运行。于是</p>

<div><script src='https://gist.github.com/1972602.js?file='></script>
<noscript><pre><code>set LANG=zh_CN.UTF-8
set LC_ALL=zh_CN.UTF-8</code></pre></noscript></div>


<p>然后再次运行<code>jekyll</code>，<strong>正常了！</strong></p>

<p>于是才有了此篇日志。</p>

<hr />

<p>本来用<a href="https://github.com/mojombo/jekyll/wiki" title="Jekyll">Jekyll</a>的日志已经做好了，但是发现无法从手机上正常浏览。又懒得去研究怎么调整HTML、CSS那一套东西。正一筹莫展之际，发现了<a href="http://octopress.org" title="Octopress">Octopress</a>这个东西。于是毅然变节，改投<a href="http://octopress.org" title="Octopress">Octopress</a>，于是有了现在的后半段。</p>

<p><a href="http://octopress.org" title="Octopress">Octopress</a>比较有趣，会把代码放在<code>source</code>目录下，把生成的网站放在<code>_deploy</code>目录下。（当然所有目录都可以通过设置修改。）然后会自动将<code>_deploy</code>目录作为github page的<code>master</code>分支，将包含source在内的部分作为github page的<code>source</code>分支。</p>

<p>对<a href="http://git-scm.com/" title="Git">Git</a>还不是特别了解，或许领会不到如此分离的真谛，但隐约能感觉到这样做会使Repository里的结构清晰很多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[这是什么机器？]]></title>
    <link href="http://programus.github.com/blog/2011/01/24/what-is-this-machine/"/>
    <updated>2011-01-24T21:32:00+09:00</updated>
    <id>http://programus.github.com/blog/2011/01/24/what-is-this-machine</id>
    <content type="html"><![CDATA[<p>请看视频（记得开声音）：</p>

<!--more-->


<p><embed src="http://player.youku.com/player.php/sid/XMjM1NDk2Njgw/v.swf" allowFullScreen="true" quality="high" width="480" height="400" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash"></embed></p>

<p><a href="http://v.youku.com/v_show/id_XMjM1NDk2Njgw.html">视频地址</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TinyCountdown - 小巧纯粹的倒计时软件]]></title>
    <link href="http://programus.github.com/blog/2010/11/15/tiny-countdown/"/>
    <updated>2010-11-15T23:37:00+09:00</updated>
    <id>http://programus.github.com/blog/2010/11/15/tiny-countdown</id>
    <content type="html"><![CDATA[<p>自从工作以后，一直面临一个问题：开会超时。而作为IT公司的会议，又有一个常见的情况——共享或投影屏幕。</p>

<p>基于此，在上周的一次会议上，我在共享屏幕的同时，挂上了一个倒计时程序。效果还不错。毕竟发言者在众目睽睽之下超时实在很没面子。但是，那个计时程序上面的很多按钮实在太占地方，在共享屏幕的时候常常遮挡住必要内容，导致不得不移来移去。于是乎，作为IT从业人员，再次热血沸腾，写了一个更加小巧的倒计时软件。既然小巧是最主要特点，于是便命名为——</p>

<p><strong>TinyCountdown</strong></p>

<!--more-->


<p><img src="http://i141.photobucket.com/albums/r60/programus/software/TinyCountdown_preview.gif" title="screenshot" ></p>

<p>程序运行后，没有任何累赘的标题栏、按钮、菜单等。唯一有效内容之外的累赘就是一个为了方便改变窗口大小的窗口边框。（好吧，我承认技术上去掉这个也是可能的，我在偷懒……）</p>

<p>有君问：啥都没有，怎么操控？</p>

<p>答曰：鼠标 或 键盘，组合更悠然。</p>

<p>操作说明窗口会在鼠标飘过主窗口时出现，为了软件的通用性，做成了英文的。</p>

<p>现将中文概述如下：</p>

<table>
<thead>
<tr>
<th align="left">功能             </th>
<th align="left"> 鼠标操作       </th>
<th align="left"> 键盘操作 </th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">开始倒计时       </td>
<td align="left">单击左键        </td>
<td align="left">空格</td>
</tr>
<tr>
<td align="left">暂停倒计时       </td>
<td align="left">单击左键        </td>
<td align="left">空格</td>
</tr>
<tr>
<td align="left">重置倒计时       </td>
<td align="left">单击左键(停止时)</td>
<td align="left">Backspace</td>
</tr>
<tr>
<td align="left">设置倒计时时间    </td>
<td align="left">单击右键       </td>
<td align="left">回车</td>
</tr>
<tr>
<td align="left">关闭程序          </td>
<td align="left">将主窗口缩至极小</td>
<td align="left">ESC</td>
</tr>
<tr>
<td align="left">帮助窗口显示/隐藏 </td>
<td align="left">单击中键        </td>
<td align="left">F1</td>
</tr>
<tr>
<td align="left">设置主窗口总在最前</td>
<td align="left">               </td>
<td align="left">HOME</td>
</tr>
<tr>
<td align="left">取消主窗口总在最前</td>
<td align="left">               </td>
<td align="left">END</td>
</tr>
<tr>
<td align="left">全屏幕切换        </td>
<td align="left">               </td>
<td align="left">M</td>
</tr>
</tbody>
</table>


<p>其他隐藏操作，请自行摸索。</p>

<p>为保证程序的小巧和绿色，程序不会保存任何设置，默认倒计时时间为15分钟，默认开启帮助窗口，默认程序出现在窗口右上角，默认程序为总在最前。程序内置内存优化机制，平均占用内存在1MB左右，内存占用峰值不足2MB。</p>

<p>希望有习惯整洁小巧的人士喜欢。</p>

<p>忘了说了，本程序只能在Windows平台上运行，对不起Mac和Linux等的兄弟了。望不要介意。</p>

<p>下载地址：</p>

<p><a href="http://code.google.com/p/tinytool/downloads/detail?name=TinyCountdown.exe">http://code.google.com/p/tinytool/downloads/detail?name=TinyCountdown.exe</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NXTRockBoy上的第二个原创游戏——Drop Ball]]></title>
    <link href="http://programus.github.com/blog/2009/12/25/nxtrockboy-dropball/"/>
    <updated>2009-12-25T11:21:00+09:00</updated>
    <id>http://programus.github.com/blog/2009/12/25/nxtrockboy-dropball</id>
    <content type="html"><![CDATA[<p>前一段时间工作很忙，本职工作很忙。后来，集中精力制作了第二款NXTRockBoy的游戏——Drop Ball。顺便说一下，第一款游戏在<a href="http://programus.github.com/blog/2009/10/25/nxtrockboy-bball/">这里</a>。</p>

<!--more-->


<p>Drop Ball是一款什么样的游戏呢？</p>

<p>大家记得有一个男人系列的游戏吧。其中有一个是“是男人就下一百层”。好，Drop Ball就是这个游戏的摇摆游戏机版。只不过把那个倒霉的小男孩换成了我们的主角——小黑球。玩那个游戏按箭头按到手疼的同学们，现在可以换一种方式了。</p>

<p>在这个游戏中，继续发挥了NXTRockBoy的摇摆操作特性，小球仍然是受到重力的影响，而且依旧具有惯性。不要以为你把NXTRockBoy往左转，小球就往左跑，如果他之前有一个右方向的速度，他是要先进行减速的。所以，游戏一如既往地很有难度，不过可玩性提高了很多。</p>

<p>另外，作为第二个游戏，总要有些突破。这个游戏中增加了两个重要特性——</p>

<p>第一个——背景音乐支持！在不影响小球那个滴滴答答的音效的基础上增加了背景音乐支持。系统中内置了三段音乐——Final Countdown、Smooth Criminal、变形金刚动画片主题曲。如果你想要自定义，只要读读我的<a href="http://code.google.com/p/nxtprojects/wiki/NXTUtils">帮助</a>中的音乐支持部分，自己写一段代码即可。</p>

<p>第二个——环境光支持！如果有人组装了NXTRockBoy，一定对上面安装的颜色/光传感器和超声传感器感到奇怪。因为上一个游戏压根没用到这两个东西。这一款游戏用到了颜色/光传感器（虽然超声传感器还是遭到冷遇）。游戏中平台的相关参数会根据游戏机所在地的环境光的强度改变。</p>

<p>游戏有两个模式——<code>|</code>模式和<code>-</code>模式。<code>|</code>模式下，光线强，则平台间距小；<code>-</code>模式下光线强，则平台宽度大。</p>

<p>好，看了这么多，大家一定期待着看视频了。那就如期上视频！</p>

<p><embed src="http://player.youku.com/player.php/sid/XMTM5OTEwNDA0/v.swf" allowFullScreen="true" quality="high" width="480" height="400" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash"></embed></p>

<p><a href="http://v.youku.com/v_show/id_XMTM5OTEwNDA0.html">视频网址</a></p>

<p>最后，也是最重要的：</p>

<p>搭建图及程序下载和说明，请看这里：</p>

<p><a href="http://code.google.com/p/nxtprojects/wiki/DropBall">http://code.google.com/p/nxtprojects/wiki/DropBall</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NXTRockBoy - 原创游戏机 & BBall - 其上的第一个游戏]]></title>
    <link href="http://programus.github.com/blog/2009/10/25/nxtrockboy-bball/"/>
    <updated>2009-10-25T22:26:00+09:00</updated>
    <id>http://programus.github.com/blog/2009/10/25/nxtrockboy-bball</id>
    <content type="html"><![CDATA[<p>利用近一个月的业余时间，终于成功地用NXT 8547搭建起了原创的摇摆游戏机NXTRockBoy，并开发完了世上第一款NXTRockBoy游戏——BBall。</p>

<!--more-->


<p>NXTRockBoy是我用LEGO Mindstorms NXT 8547机器人套装搭建而成的一款原创游戏机。他最大的特点是通过摇摆来作为主要输入。有人说Wii的输入也是通过摇摆，而且是三维方向的摇摆，NXTRockBoy有什么创新？Wii也是我很喜欢的游戏机，在玩NXT之前，常常在玩，但是当你玩Wii的时候，只是在摇摆游戏棒，电视不会跟着摇。而我的NXTRockBoy是要摇晃包含显示屏在内的游戏机本体，所以产生的效果就是屏幕及屏幕里面的内容都会随着摇摆进行运动。</p>

<p>那么，这种输入特性有什么好玩的？</p>

<p>那就得谈谈这第一款游戏——BBall了。BBall，要是一定要有一个中文名字的话，我认为“蹦蹦球”应该是个很贴切的名字。因为游戏的主角就是一个弹力超强的小球。弹力强到什么程度呢？如果放任不管地让他去上下弹啊弹，他会越蹦越高，最大速度（势能最低时）越来越快。这球要是出现在现实世界中，恐怕永动机就不再是神话了。好吧，实际上，这其实是程序在微分运算时的精度不足引起的，所以我在程序里面加入了极限能量控制。小球动能和势能的总和不能超过一个既定的值，如果超过，则强行降低速度。</p>

<p>一不小心把话扯远了，现在拉回来。这个小球就这么欢快地在屏幕里面蹦啊蹦，碰到屏幕的边缘便反弹，碰到任何黑色的障碍也反弹。小球最喜欢的就是去吃豆豆。屏幕里总会有一个不一定在什么位置的豆豆等着他。但是小球自己无法有意识地向豆豆移动，所以他需要玩家的帮助。</p>

<p>小球除了反弹，在运动过程中只受到一个力——重力。就是物理书里面说的那个竖直向下的重力，那个不会随着屏幕的旋转而旋转的重力！好，现在就要说到摇摆输入的好玩之处了：比如说，当小球在天空中，达到了最高点，势能最大，动能为零（也就意味着速度为零），这时我们旋转了游戏机本体，那么小球就不会再沿着与屏幕侧边平行的方向下落，而是沿着与自然界的竖直方向相同的方向下落，而相对于屏幕，就是一个倾斜的方向。当然，举一个动能为零的例子是为了简化说明，如果动能不为零，那么就是抛物线的一个局部。这样，当小球与屏幕底边接触时，它的速度方向与底边的夹角就不再是直角，而是某个特定的角度。那么反弹的时候就会向相对于底边倾斜的方向反弹（与入射角的和为180°）。通过这样的角度变化实现了小球运动方向与速度的调节。</p>

<p>另一方面，因为小球的坐标及速度是与屏幕黏着在一起的，所以小球实际上是无法实现能量守恒的，这样速度常常会出现极具戏剧性的变化。</p>

<p>好吧。我知道我上面说了那么多，恐怕你也不一定能看懂。毕竟我写自然坐标与屏幕坐标变换模块的时候，自己也头疼了好几天，草纸也用了好几张，早已忘记很久的正弦定理和余弦定理又被我记熟了。所以，对不懂的人，我非常理解和同情，故此我留下了下面的视频。希望能帮助大家理解和愉悦各位的身心。</p>

<p><embed src="http://www.tudou.com/v/9-eFmGmNbZ8/&resourceId=0_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400"></embed></p>

<p><a href="http://www.tudou.com/programs/view/9-eFmGmNbZ8/?resourceId=0_06_02_99">土豆网链接</a></p>

<p>独乐乐不如与人乐乐，与人乐乐不如众乐乐。在此共享一下详细的构件图和源代码：</p>

<ul>
<li><a href="http://code.google.com/p/nxtprojects/wiki/BBall">http://code.google.com/p/nxtprojects/wiki/BBall</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
